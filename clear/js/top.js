// Generated by CoffeeScript 1.6.1
(function() {
  var fisherYates, get_ranking, last_data, update;

  fisherYates = function(arr) {
    var i, j, tempi, tempj;
    i = arr.length;
    while (--i) {
      j = Math.floor(Math.random() * (i + 1));
      tempi = arr[i];
      tempj = arr[j];
      arr[i] = tempj;
      arr[j] = tempi;
    }
    return arr;
  };

  get_ranking = (function() {
    return function(cb) {
      $.ajax({
		url: '/clear/api.php?action=top',
		success: function (data) {
		  var ranks = JSON.parse(data);
		  //console.log(ranks);
		  var _data = [], i = 0, name, names, r, _i, _len;
		  
		  for (_i = 0, _len = ranks.length; _i < _len; _i++) {
			name = '';
			_data.push({
			  name: ranks[_i].realname,
			  rank: ++i,
			  famous: ranks[_i].famous
			});
		  }
		  return cb(_data);
		}
	  });
      
    };
  })();

  last_data = {};

  update = function() {
    return get_ranking(function(data) {
      var current_data, d, deleting, element_count, element_height, later, name, _i, _len;
      $('#loading').hide();
      $('#top').show();
      current_data = {};
      later = [];
      deleting = [];
      element_height = 90;
      element_count = 10;
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        current_data[d.name] = d;
      }
      for (name in current_data) {
        d = current_data[name];
        if (!last_data[name]) {
          d.element = $('<div>').addClass('item');
          d.element.html('<span class="famous badge badge-important">' + d.famous + '</span><span class="text">' + name + '</span>');
          d.element.appendTo('#top');
          d.element.css('margin-top', element_height * element_count);
          d.element.css('opacity', 0);
          d.element.hover(function() {
            $(this).css('opacity', 1);
          }, function() {
            $(this).css('opacity', 0.6);
          });
          later.push(d);
        } else {
          d.element = last_data[name].element;
          d.element.find('.famous').text(d.famous);
          d.element.css('margin-top', (d.rank - 1) * element_height);
        }
      }
      for (name in last_data) {
        d = last_data[name];
        if (!current_data[name]) {
          d.element.css('margin-top', element_height * element_count);
          d.element.css('opacity', 0);
          deleting.push(d);
        }
      }
      last_data = current_data;
      setTimeout(function() {
        var _j, _len1;
        for (_j = 0, _len1 = later.length; _j < _len1; _j++) {
          d = later[_j];
          d.element.css('margin-top', (d.rank - 1) * element_height);
          d.element.css('opacity', 0.6);
          //console.log(d.name);
        }
        return later = null;
      }, 0);
      setTimeout(function() {
        var _j, _len1;
        for (_j = 0, _len1 = deleting.length; _j < _len1; _j++) {
          d = deleting[_j];
          d.element.remove();
        }
        return deleting = null;
      }, 2000);
      return setTimeout(update, 5000);
    });
  };

  $(document).ready(function() {
    return update();
  });

}).call(this);
